---
import Icon from "@/components/Icon.astro";
import IconWrapper from "@/components/IconWrapper.astro";
import SectionTitle from "@/components/SectionTitle.astro";
import type { Icon as IconType, ServicesData } from "@/config/landing.interface";

interface Props {
  data: ServicesData;
}

const data = Astro.props.data;
---

<section id="services-section" class="flex flex-col mb-60 gap-y-28">
  <SectionTitle>
    {data.title}
  </SectionTitle>
  <div class="grid md:grid-cols-2 gap-y-10 justify-items-center">
    {data.services.map((service) => (
      <article class="flex gap-x-6 md:gap-x-12 md:w-[550px]">
        <div>
          <IconWrapper>
            <Icon icon={service.icon as IconType} />
          </IconWrapper>
        </div>
        <section>
          <h3 class="text-xl font-medium md:text-4xl mb-3">
            {service.title}
          </h3>
          <p class="text-pretty opacity-90 md:text-lg mb-4">
            {service.description}
          </p>
          <div>
            <a href={service.link ?? '#'} class="service-btn">
              Learn More
            </a>
          </div>
        </section>
      </article>
    ))}
  </div>
</section>

<style>
  @keyframes slideInFromLeft {
    0% {
      opacity: 0;
      transform: translateX(-100px);
    }
    50% {
      opacity: 0.5;
      transform: translateX(-50px);
    }
    100% {
      opacity: 1;
      transform: translateX(0);
    }
  }

  #services-section {
    opacity: 0;
    transform: translateX(-100px);
    transition: opacity 0.3s ease, transform 0.3s ease;
  }

  #services-section.animate {
    animation: slideInFromLeft 1.5s ease-out forwards;
  }

  .service-btn {
    padding: 0.5rem 1rem;
    background-color: white;
    color: #1D4ED8;
    border-radius: 0.375rem;
    border: 1px solid #1D4ED8;
    transition: background-color 0.3s ease, color 0.3s ease;
    display: inline-block;
    margin-left: calc(-0.5rem);
    text-align: center;
  }

  .service-btn:hover {
    background-color: #1D4ED8;
    color: white;
    border-color: transparent;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const servicesSection = document.getElementById('services-section');
    if (servicesSection) { // Check if servicesSection is not null
      servicesSection.classList.add('animate');
      
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            servicesSection.classList.add('animate');
          }
        });
      }, { threshold: 0.2 });

      observer.observe(servicesSection);
    }
  });
</script>
